#!/bin/bash

# Universal configuration file for gitlab-ci docker automation.
# These variables are used by build.sh, test.sh, upload.sh and cleanup.sh

# Git project name has to start with 'docker-' followed by an application name
# E.g. docker-netboxclient

###
# Get name of the app from the path 
# /../../docker-app_name > app_name
APP_NAME=${PWD##*-}

###
# Set version (docker image tag) based on the git tag and commit.
# At least one git tag has to exist !
#
# Docker image tag will look like "v0.0-3-gfaad671" or "devel-3-gfaad671".
# "v0.0"      - the latest git tag
# "-3"        - number of commits since the last tagged commit
# "g"         - git (hash is derived from git commit)
# "faad671"   - shortened hash of the actual commit
version=$(git describe --abbrev=7 --tags)

###
# Get the docker image name.
# When running localy, it is the same as $APP_NAME, but it differs on ci_runner.
# Docker image on ci_runner contains registry, and project info.
# app_name vs. registry_ip:registry_port/group/docker-app_name
IMAGE_NAME=`docker images | grep -v latest | grep $APP_NAME | awk '{print $1}' | uniq`

###
# Image consist of $IMAGE_NAME and $version (docker tag).
# When run locally it is $APP_NAME:$version, but again it differs on ci_runner.
# It should be safe to use $IMAGE_NAME and $IMAGE variable both locally and on ci_runner.
IMAGE=$IMAGE_NAME:$version

